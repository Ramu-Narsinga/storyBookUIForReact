{"ast":null,"code":"import _toConsumableArray from \"/home/quanteon-pc/Ramu/work/practise/storyBookUIForReact/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/home/quanteon-pc/Ramu/work/practise/storyBookUIForReact/src/components/TaskList.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Task from './Task';\nimport { connect } from 'react-redux';\nimport { archiveTask, pinTask } from '../lib/redux';\nexport function PureTaskList(_ref) {\n  var loading = _ref.loading,\n      tasks = _ref.tasks,\n      onPinTask = _ref.onPinTask,\n      onArchiveTask = _ref.onArchiveTask;\n  var events = {\n    onPinTask: onPinTask,\n    onArchiveTask: onArchiveTask\n  };\n  var LoadingRow = React.createElement(\"div\", {\n    className: \"loading-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"glow-checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"glow-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Loading\"), \" \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"cool\"), \" \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"state\")));\n\n  if (loading) {\n    return React.createElement(\"div\", {\n      className: \"list-items\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, LoadingRow, LoadingRow, LoadingRow, LoadingRow, LoadingRow, LoadingRow);\n  }\n\n  if (tasks.length === 0) {\n    return React.createElement(\"div\", {\n      className: \"list-items\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"wrapper-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"icon-check\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"title-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"You have no tasks\"), React.createElement(\"div\", {\n      className: \"subtitle-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Sit back and relax\")));\n  }\n\n  var tasksInOrder = [].concat(_toConsumableArray(tasks.filter(function (t) {\n    return t.state === 'TASK_PINNED';\n  })), _toConsumableArray(tasks.filter(function (t) {\n    return t.state !== 'TASK_PINNED';\n  })));\n  return React.createElement(\"div\", {\n    className: \"list-items\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, tasksInOrder.map(function (task) {\n    return React.createElement(Task, Object.assign({\n      key: task.id,\n      task: task\n    }, events, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }));\n  }));\n}\nPureTaskList.propTypes = {\n  loading: PropTypes.bool,\n  tasks: PropTypes.arrayOf(Task.propTypes.task).isRequired,\n  onPinTask: PropTypes.func.isRequired,\n  onArchiveTask: PropTypes.func.isRequired\n};\nPureTaskList.defaultProps = {\n  loading: false\n};\nexport default connect(function (_ref2) {\n  var tasks = _ref2.tasks;\n  return {\n    tasks: tasks.filter(function (t) {\n      return t.state === 'TASK_INBOX' || t.state === 'TASK_PINNED';\n    })\n  };\n}, function (dispatch) {\n  return {\n    onArchiveTask: function onArchiveTask(id) {\n      return dispatch(archiveTask(id));\n    },\n    onPinTask: function onPinTask(id) {\n      return dispatch(pinTask(id));\n    }\n  };\n})(PureTaskList);","map":{"version":3,"sources":["/home/quanteon-pc/Ramu/work/practise/storyBookUIForReact/src/components/TaskList.js"],"names":["React","PropTypes","Task","connect","archiveTask","pinTask","PureTaskList","loading","tasks","onPinTask","onArchiveTask","events","LoadingRow","length","tasksInOrder","filter","t","state","map","task","id","propTypes","bool","arrayOf","isRequired","func","defaultProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Task from './Task';\nimport { connect } from 'react-redux';\nimport { archiveTask, pinTask } from '../lib/redux';\n\nexport function PureTaskList({ loading, tasks, onPinTask, onArchiveTask }) {\n    const events = {\n        onPinTask,\n        onArchiveTask,\n    }\n\n\n    const LoadingRow = (\n        <div className=\"loading-item\">\n            <span className=\"glow-checkbox\" />\n            <span className=\"glow-text\">\n                <span>Loading</span> <span>cool</span> <span>state</span>\n            </span>\n        </div>\n    )\n\n    if (loading) {\n        return (<div className=\"list-items\">\n            {LoadingRow}\n            {LoadingRow}\n            {LoadingRow}\n            {LoadingRow}\n            {LoadingRow}\n            {LoadingRow}\n        </div>\n        );\n    }\n\n    if (tasks.length === 0) {\n        return (\n            <div className=\"list-items\">\n                <div className=\"wrapper-message\">\n                    <span className=\"icon-check\" />\n                    <div className=\"title-message\">You have no tasks</div>\n                    <div className=\"subtitle-message\">Sit back and relax</div>\n                </div>\n            </div>\n        );\n    }\n\n    const tasksInOrder = [\n        ...tasks.filter(t => t.state === 'TASK_PINNED'),\n        ...tasks.filter(t => t.state !== 'TASK_PINNED'),\n    ];\n\n    return (\n        <div className=\"list-items\">\n            {tasksInOrder.map(task => <Task key={task.id} task={task} {...events} />)}\n        </div>\n    )\n}\n\nPureTaskList.propTypes = {\n    loading: PropTypes.bool,\n    tasks: PropTypes.arrayOf(Task.propTypes.task).isRequired,\n    onPinTask: PropTypes.func.isRequired,\n    onArchiveTask: PropTypes.func.isRequired,\n};\n\nPureTaskList.defaultProps = {\n    loading: false,\n};\n\nexport default connect(\n    ({ tasks }) => ({\n      tasks: tasks.filter(t => t.state === 'TASK_INBOX' || t.state === 'TASK_PINNED'),\n    }),\n    dispatch => ({\n      onArchiveTask: id => dispatch(archiveTask(id)),\n      onPinTask: id => dispatch(pinTask(id)),\n    })\n  )(PureTaskList);"]},"metadata":{},"sourceType":"module"}