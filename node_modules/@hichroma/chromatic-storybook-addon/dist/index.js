'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _keys = require('babel-runtime/core-js/object/keys');

var _keys2 = _interopRequireDefault(_keys);

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _taggedTemplateLiteral2 = require('babel-runtime/helpers/taggedTemplateLiteral');

var _taggedTemplateLiteral3 = _interopRequireDefault(_taggedTemplateLiteral2);

var _templateObject = (0, _taggedTemplateLiteral3.default)(['\n  query specsQuery($appCode: String!) {\n    appByCode(code: $appCode) {\n      components {\n        name\n        specs {\n          id\n          input\n        }\n      }\n    }\n  }\n'], ['\n  query specsQuery($appCode: String!) {\n    appByCode(code: $appCode) {\n      components {\n        name\n        specs {\n          id\n          input\n        }\n      }\n    }\n  }\n']);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

require('babel-polyfill');

var _apolloClient = require('apollo-client');

var _apolloClient2 = _interopRequireDefault(_apolloClient);

var _graphqlTag = require('graphql-tag');

var _graphqlTag2 = _interopRequireDefault(_graphqlTag);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _process$env$CHROMATI = process.env.CHROMATIC_INDEX_URL,
    CHROMATIC_INDEX_URL = _process$env$CHROMATI === undefined ? 'http://chromatic-index.hichroma.com/graphql' : _process$env$CHROMATI;

// XXX: do this
// import { storiesOf } from '@storybook/react';

var specsQuery = (0, _graphqlTag2.default)(_templateObject);

exports.default = function () {
  var _ref2 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee(appCode, _ref) {
    var storiesOf = _ref.storiesOf,
        getStorybook = _ref.getStorybook,
        addons = _ref.addons,
        Components = _ref.Components;
    var client, observable;
    return _regenerator2.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            client = new _apolloClient2.default({
              networkInterface: (0, _apolloClient.createNetworkInterface)({ uri: CHROMATIC_INDEX_URL })
            });
            _context.next = 3;
            return client.watchQuery({
              query: specsQuery,
              variables: { appCode: appCode },
              pollInterval: 1000
            });

          case 3:
            observable = _context.sent;


            observable.subscribe({
              error: function error(_error) {
                console.error(_error);
              },
              next: function next(_ref3) {
                var data = _ref3.data;

                console.log(data);
                var components = data.appByCode.components;

                components.forEach(function (_ref4) {
                  var name = _ref4.name,
                      specs = _ref4.specs;

                  var chapter = storiesOf(name);
                  specs.forEach(function (_ref5) {
                    var id = _ref5.id,
                        input = _ref5.input;
                    return chapter.add(id, function () {
                      var parsedInput = JSON.parse(input);
                      var ancestors = parsedInput.ancestors,
                          dimensions = parsedInput.dimensions;

                      var element = inputToElement(parsedInput, Components);
                      return wrapInAncestors(element, ancestors, dimensions);
                    });
                  });
                });
                // eslint-disable-next-line no-use-before-define
                forceRerender({ getStorybook: getStorybook, addons: addons });
              }
            });

          case 5:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, this);
  }));

  return function (_x, _x2) {
    return _ref2.apply(this, arguments);
  };
}();

function forceRerender(_ref6) {
  var getStorybook = _ref6.getStorybook,
      addons = _ref6.addons;

  // Force a re-render
  var fullStorybook = getStorybook();
  // This is what the output of story_store.dumpStorybook looks like:
  var dumpedStorybook = fullStorybook.map(function (_ref7) {
    var kind = _ref7.kind,
        stories = _ref7.stories;
    return {
      kind: kind,
      stories: stories.map(function (_ref8) {
        var name = _ref8.name;
        return name;
      })
    };
  });
  var channel = addons.getChannel();
  channel.emit('setStories', { stories: dumpedStorybook });
}

// XXX: copied from isolator, refactor
function childrenToElements(props, Components) {
  var childToElement = function childToElement(child) {
    if (typeof child === 'string') {
      return child;
    }

    if (child.$text) {
      return child.$text;
    }

    // It will be a basic DOM element
    var childProps = childrenToElements(child.props, Components);
    return _react2.default.createElement(child.name, childProps);
  };

  return (0, _extends3.default)({}, props, {
    children: props.children ? props.children.map(childToElement) : []
  });
}

function inputToElement(_ref9, Components) {
  var name = _ref9.name,
      props = _ref9.props;

  console.log({ name: name, props: props });
  var Component = Components[name];
  if (!Component) {
    console.error('Didn\'t find component named ' + name + '!');
    console.error('Our components are: ' + (0, _keys2.default)(Components));
    throw new Error('Didn\'t find ' + name);
  }
  return _react2.default.createElement(Component, childrenToElements(props, Components));
}

function wrapInAncestors(element, ancestors, _ref10) {
  var width = _ref10.width,
      height = _ref10.height;

  var style = {
    width: width,
    height: height,
    margin: 0,
    padding: 0,
    position: 'static'
  };
  return ancestors.reduceRight(function (output, _ref11) {
    var Tag = _ref11.name,
        id = _ref11.id,
        className = _ref11.className;
    return _react2.default.createElement(
      Tag,
      { id: id, className: className, style: style },
      output
    );
  }, element);
}
//# sourceMappingURL=index.js.map